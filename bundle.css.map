{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { onMount } from \"svelte\"\n    import Blockly from \"blockly\"\n    import DarkTheme from \"@blockly/theme-dark\"\n    import load_blocks from \"./blocks\"\n    import codegen from \"./codegen\"\n    import patch from \"./intertion_marker_manager_monkey_patch\"\n\n    patch(Blockly);\n    const blocks = load_blocks(Blockly)\n    // group by category\n    const categories = blocks.reduce((rv, x) => {\n        (rv[x.category] = rv[x.category] || []).push(x)\n        return rv\n    }, {})\n\n    onMount(() => {\n        Blockly.inject(document.getElementById(\"blocklyDiv\"), {\n            theme: DarkTheme,\n            toolbox: document.getElementById(\"toolbox\"),\n        })\n\n        Blockly.getMainWorkspace().addChangeListener((e) => {\n            var code = codegen(Blockly.getMainWorkspace(), compact)\n            document.getElementById(\"output\").textContent = code\n        })\n\n        window.B = Blockly // for debugging\n    })\n\n    let compact = false\n    function on_compact_clicked() {\n        compact = !compact\n        var code = codegen(Blockly.getMainWorkspace(), compact)\n        document.getElementById(\"output\").textContent = code\n    }\n</script>\n\n<div id=\"app\">\n    <div id=\"blocklyDiv\" />\n    <xml id=\"toolbox\" style=\"display:none\">\n        {#each Object.entries(categories) as [category, blocks]}\n            <category name=\"{category}\">\n                {#each blocks as block}\n                    <block type=\"{block.name}\">\n                    {#each (block.default_arg_names || []) as arg_name, i}\n                        <value name=\"arg_{i}\">\n                            <shadow type=\"argument\">\n                                <field name=\"key\">{arg_name}</field>\n                                <field name=\"value\"></field>\n                            </shadow>\n                        </value>\n                    {/each}\n                    </block>\n                {/each}\n            </category>\n        {/each}\n\n        <category name=\"Argument\">\n            <block type=\"argument\" />\n        </category>\n    </xml>\n    <div id=\"output\" />\n    <label id=\"compact\">\n        <input type=\"checkbox\" on:change={on_compact_clicked}/>\n        compact\n    </label>\n</div>\n\n<style>\n    #app {\n        font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n    }\n    #blocklyDiv {\n        height: 100%;\n        width: 70%;\n        position: absolute;\n        bottom: 0;\n        text-align: left;\n    }\n    #output {\n        height: calc(100% - 20px);\n        width: 30%;\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        overflow-y: auto;\n        background-color: #333;\n        color: #ccc;\n        white-space: pre-wrap;\n    }\n    #compact {\n        height: 20px;\n        width: 30%;\n        min-width: 120px;\n        position: absolute;\n        right: 0;\n        top: 0;\n        background-color: #333;\n        font-size: 14px;\n        color: #ccc\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAsEI,IAAI,cAAC,CAAC,AACF,WAAW,CAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CACnD,sBAAsB,CAAE,WAAW,CACnC,uBAAuB,CAAE,SAAS,CAClC,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,OAAO,AAClB,CAAC,AACD,WAAW,cAAC,CAAC,AACT,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,OAAO,cAAC,CAAC,AACL,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACzB,KAAK,CAAE,GAAG,CACV,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,CAAC,CACR,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,QAAQ,AACzB,CAAC,AACD,QAAQ,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,CAChB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,CACR,GAAG,CAAE,CAAC,CACN,gBAAgB,CAAE,IAAI,CACtB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI;IACf,CAAC"
}